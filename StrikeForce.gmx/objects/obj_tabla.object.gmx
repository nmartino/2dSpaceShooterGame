<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_tabla</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_alpha = .7;
room_name_local = room_get_name(room);
room_name_highscore = room_get_name(room_highscores);
if(room_name_local != room_name_highscore){
instance_create(x,y+40,obj_stars);
button = instance_create(x,y+65,obj_menu_button);
if(obj_game.vidas1 &gt; 1) {
button.R = room_levels;}
else{button.R = room_menu;}
die = false;
instance_create(x,y,obj_ads);}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
draw_set_halign(fa_center);
draw_set_valign(fa_middle);
draw_set_font(f_score);
draw_set_colour(c_green);
room_name_local = room_get_name(room);
room_name_highscore = room_get_name(room_highscores);
room_name_credits = room_get_name(room_credits);
if(room_name_local != room_name_highscore and room_name_local != room_name_credits){
if(die){
draw_text(x,y-60,"Game Over")
}else{
draw_text(x,y-60,"Level#complete")
}
draw_text(x,y-30,"Score");
draw_set_colour(c_white);
draw_text(x,y-15,string(score));
draw_set_colour(c_green);
draw_text(x,y,"Highscore");
draw_set_colour(c_white);
//room_name = room_get_name(room);
room_name1 = room_get_name(room_space);
room_name2 = room_get_name(room_space_2);
room_name3 = room_get_name(room_space_3);
room_name4 = room_get_name(room_space_4);
room_name5 = room_get_name(room_space_5);
room_name6 = room_get_name(room_space_6);
room_name7 = room_get_name(room_space_7);
room_name8 = room_get_name(room_space_8);
room_name9 = room_get_name(room_space_9);
room_name10 = room_get_name(room_space_10);
room_name11 = room_get_name(room_space_11);
room_name12 = room_get_name(room_space_12);
room_name13 = room_get_name(room_space_13);
room_name14 = room_get_name(room_space_14);
room_name15 = room_get_name(room_space_15);
switch(room_get_name(room))
{
    case room_name1:
       if(score &gt; obj_game.highscore1)
        {   
            draw_text(x,y+15,string(score))
        }else{
       draw_text(x,y+15,string(obj_game.highscore1))}
        break;
    case room_name2:
        if(score &gt; obj_game.highscore2)
        {   
            draw_text(x,y+15,string(score))
        }else{
       draw_text(x,y+15,string(obj_game.highscore2))}
        break;
    case room_name3:
         if(score &gt; obj_game.highscore3)
        {   
            draw_text(x,y+15,string(score))
        }else{
       draw_text(x,y+15,string(obj_game.highscore3))}
        break;
    case room_name4:
         if(score &gt; obj_game.highscore4)
        {   
            draw_text(x,y+15,string(score))
        }else{
       draw_text(x,y+15,string(obj_game.highscore4))}
        break;
    case room_name5:
         if(score &gt; obj_game.highscore5)
        {   
            draw_text(x,y+15,string(score))
        }else{
       draw_text(x,y+15,string(obj_game.highscore5))}
        break;
    case room_name6:
         if(score &gt; obj_game.highscore6)
        {   
            draw_text(x,y+15,string(score))
        }else{
       draw_text(x,y+15,string(obj_game.highscore6))}
        break;
    case room_name7:
         if(score &gt; obj_game.highscore7)
        {   
            draw_text(x,y+15,string(score))
        }else{
       draw_text(x,y+15,string(obj_game.highscore7))}
        break;
    case room_name8:
         if(score &gt; obj_game.highscore8)
        {   
            draw_text(x,y+15,string(score))
        }else{
       draw_text(x,y+15,string(obj_game.highscore8))}
        break;
    case room_name9:
         if(score &gt; obj_game.highscore9)
        {   
            draw_text(x,y+15,string(score))
        }else{
       draw_text(x,y+15,string(obj_game.highscore9))}
        break;
    case room_name10:
         if(score &gt; obj_game.highscore10)
        {   
            draw_text(x,y+15,string(score))
        }else{
       draw_text(x,y+15,string(obj_game.highscore10))}
        break;
    case room_name11:
         if(score &gt; obj_game.highscore11)
        {   
            draw_text(x,y+15,string(score))
        }else{
        draw_text(x,y+15,string(obj_game.highscore11))}
        break;
    case room_name12:
         if(score &gt; obj_game.highscore12)
        {   
            draw_text(x,y+15,string(score))
        }else{
       draw_text(x,y+15,string(obj_game.highscore12))}
        break;
    case room_name13:
         if(score &gt; obj_game.highscore13)
        {   
            draw_text(x,y+15,string(score))
        }else{
       draw_text(x,y+15,string(obj_game.highscore13))}
        break;
    case room_name14:
         if(score &gt; obj_game.highscore14)
        {   
            draw_text(x,y+15,string(score))
        }else{
       draw_text(x,y+15,string(obj_game.highscore14))}
        break;
    case room_name15:
         if(score &gt; obj_game.highscore15)
        {   
            draw_text(x,y+15,string(score))
        }else{
       draw_text(x,y+15,string(obj_game.highscore15))}
        break;
}
draw_set_colour(c_white);
}else{
switch(room_get_name(room)){
    case room_name_highscore:
        if(instance_exists(obj_pages)){
        draw_text(x,y-60,"Highscores");
        draw_set_colour(c_green);
            switch (obj_pages.page){
            case 1:
                    draw_text(x,y-40,"Level 1");
                    draw_set_colour(c_white);
                    draw_text(x,y-20,string(obj_game.highscore1));
                    draw_set_colour(c_green);
                    draw_text(x,y,"Level 2");
                    draw_set_colour(c_white);
                    draw_text(x,y+20,string(obj_game.highscore2));
                    draw_set_colour(c_green);
                    draw_text(x,y+40,"Level 3");
                    draw_set_colour(c_white);
                    draw_text(x,y+60,string(obj_game.highscore3));
            break;
            case 2:
                    draw_text(x,y-40,"Level 4");
                    draw_set_colour(c_white);
                    draw_text(x,y-20,string(obj_game.highscore4));
                    draw_set_colour(c_green);
                    draw_text(x,y,"Level 5");
                    draw_set_colour(c_white);
                    draw_text(x,y+20,string(obj_game.highscore5));
                    draw_set_colour(c_green);
                    draw_text(x,y+40,"Level 6");
                    draw_set_colour(c_white);
                    draw_text(x,y+60,string(obj_game.highscore6));
            break;
            case 3:
                    draw_text(x,y-40,"Level 7");
                    draw_set_colour(c_white);
                    draw_text(x,y-20,string(obj_game.highscore7));
                    draw_set_colour(c_green);
                    draw_text(x,y,"Level 8");
                    draw_set_colour(c_white);
                    draw_text(x,y+20,string(obj_game.highscore8));
                    draw_set_colour(c_green);
                    draw_text(x,y+40,"Level 9");
                    draw_set_colour(c_white);
                    draw_text(x,y+60,string(obj_game.highscore9));
            break;
            case 4:
                    draw_text(x,y-40,"Level 10");
                    draw_set_colour(c_white);
                    draw_text(x,y-20,string(obj_game.highscore10));
                    draw_set_colour(c_green);
                    draw_text(x,y,"Level 11");
                    draw_set_colour(c_white);
                    draw_text(x,y+20,string(obj_game.highscore11));
                    draw_set_colour(c_green);
                    draw_text(x,y+40,"Level 12");
                    draw_set_colour(c_white);
                    draw_text(x,y+60,string(obj_game.highscore12));
            break;
            case 5:
                    draw_text(x,y-40,"Level 13");
                    draw_set_colour(c_white);
                    draw_text(x,y-20,string(obj_game.highscore13));
                    draw_set_colour(c_green);
                    draw_text(x,y,"Level 14");
                    draw_set_colour(c_white);
                    draw_text(x,y+20,string(obj_game.highscore14));
                    draw_set_colour(c_green);
                    draw_text(x,y+40,"Level 15");
                    draw_set_colour(c_white);
                    draw_text(x,y+60,string(obj_game.highscore15));
            break;
            }
           }
        
}
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
